## Quản lý cấu hình ứng dụng
### Bài 1: Quản lý cấu hình ứng dụng sử dụng Env Variables
1. Kiểm tra file configmap ví dụ
```bash
vi example-configMap.yml
```

2. Tạo configmap bằng env variables
```bash
kubectl apply -f example-configMap.yml
kubectl get configmap 
kubectl describe configmap player-pro-demo
```
3. Kiểm tra file secret ví dụ
```bash
vi example-secret.yml
```
4. Tạo secret bằng env variables
```bash
kubectl apply -f example-secret.yml
kubectl get secret 
kubectl describe secret example-secret
```
5. Kiểm tra file triển khai pod để chuyền configmap và secret
```bash
vi configmap-env-demo.yml
```

6. Triển khai Pod để chuyển configmap và secret vừa tạo vào container
```bash
kubectl apply -f configmap-env-demo.yml
kubectl get pods
```
7. Exec vào pod vừa tạo để kiểm tra configmap và secret đã chuyền vào
```bash
kubectl exec configmap-env-demo -it -- sh
echo $PLAYER_LIVES
echo $SECRET_USERNAME
printenv
exit
```

### Bài 2: Quản lý cấu hình ứng dụng sử dụng Mount Volumes
1. Kiểm tra pod đang tồn tại
```bash
kubectl get pods
```
2. Kiểm tra file configmap-vol-demo.yml
```bash
vi configmap-vol-demo.yml
```
3.  Tạo pod sử dụng volume mount từ file trên
```bash
kubectl apply -f configmap-vol-demo.yml
```
4.  Exec vào pod vừa tạo để kiểm tra volume mount file
```bash
kubectl exec configmap-vol-demo -it -- sh
cd /etc/config/configMap/
ls
cat user-interface.properties
cat base.properties
cd /etc/config/secret
cat username
cat password
exit
```